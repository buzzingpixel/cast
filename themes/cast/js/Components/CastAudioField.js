class CastAudioField{constructor(e){const t=this;return{el:e,mounted(){const{$el:e}=this;t.vm=this,t.csrfTokenName=String(e.getAttribute("data-csrf-token-name")),t.csrfToken=String(e.getAttribute("data-csrf-token")),t.uploadKey=String(e.getAttribute("data-upload-key")),t.uploadUrl=String(e.getAttribute("data-upload-url")),this.hasFile=""!==e.getAttribute("data-file-name"),this.fileName=String(e.getAttribute("data-file-name")),this.mimeType=String(e.getAttribute("data-mime-type")),this.fileSize=String(e.getAttribute("data-file-size"))},data:{uploadIconIsActive:null,uploadInProgress:null,hasFile:null,uploadPath:null,fileName:null,mimeType:null,fileSize:null},watch:{hasFile:e=>{const{vm:a}=t;e||(a.uploadPath="",a.fileName="",a.mimeType="",a.fileSize="")}},methods:{preventDefault(e){e.preventDefault(),e.stopPropagation()},dragOver(e){this.preventDefault(e),this.uploadIconIsActive=!0},dragLeave(e){this.preventDefault(e),this.uploadIconIsActive=!1},drop(e){const a=this;a.preventDefault(e),a.uploadIconIsActive=!1,a.uploadInProgress=!0;try{const i=e.dataTransfer.files[0];if("audio"!==i.type.split("/")[0])throw new Error("Not an audio file");t.uploadFile(i,(e,t)=>{a.uploadComplete(e,t)},()=>{a.uploadFailed()})}catch(e){a.uploadInProgress=!1}},uploadComplete(e){this.uploadInProgress=!1,this.hasFile=!0,this.uploadPath=e.location,this.fileName=e.name,this.mimeType=e.mimeType,this.fileSize=e.fileSize},uploadFailed(){this.uploadInProgress=!1},removeFile(){this.hasFile=!1}}}}uploadFile(e,t,a){const i=this,l=new FormData;l.append(i.csrfTokenName,i.csrfToken),l.append("upload_key",i.uploadKey),l.append("file",e,e.name),axios.post(i.uploadUrl,l,{responseType:"json",validateStatus:e=>200===e||400===e}).then(e=>{i.uploadKey=e.data.newUploadKey,e.data.success||"function"!=typeof a?"function"==typeof t&&t(e.data.file):a(e)}).catch(e=>{"function"==typeof a&&a(e)})}}export default CastAudioField;
//# sourceMappingURL=CastAudioField.js.map