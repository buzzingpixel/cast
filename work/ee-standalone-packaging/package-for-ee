<?php

/** @noinspection PhpUnhandledExceptionInspection */

declare(strict_types=1);

use BuzzingPixel\Cast\Cast\Di;
use Symfony\Component\Filesystem\Filesystem;
use function Safe\file_get_contents;
use function Safe\json_decode;
use function Safe\json_encode;

$appDir = dirname(__DIR__, 2);
$baseDir = __DIR__;
$packageDir = $baseDir . '/package';
$systemDir = $packageDir . '/system/user/cast';
$themesDir = $packageDir . '/themes/user';

/** @noinspection PhpIncludeInspection */
require_once $appDir . '/vendor/autoload.php';
/** @noinspection PhpIncludeInspection */
require_once $appDir . '/devMode.php';

$fileSystem = Di::diContainer()->get(Filesystem::class);

$fileSystem->mkdir("{$themesDir}");

$fileSystem->mkdir("{$systemDir}/src");

exec("cp -r {$appDir}/src/* {$systemDir}/src/");
exec("cp -r {$appDir}/themes/* {$themesDir}/");

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/language",
    "{$systemDir}/language"
);

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/addon.setup.php",
    "{$systemDir}/addon.setup.php"
);

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/ft.cast_audio.php",
    "{$systemDir}/ft.cast_audio.php"
);

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/ft.cast_episode_number.php",
    "{$systemDir}/ft.cast_episode_number.php"
);

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/mcp.cast.php",
    "{$systemDir}/mcp.cast.php"
);

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/mod.cast.php",
    "{$systemDir}/mod.cast.php"
);

$fileSystem->rename(
    "{$systemDir}/src/ExpressionEngine/upd.cast.php",
    "{$systemDir}/upd.cast.php"
);

$composerJson = json_decode(file_get_contents($appDir . '/composer.json'), true);

unset(
    $composerJson['require-dev'],
    $composerJson['autoload']['classmap'],
    $composerJson['autoload-dev'],
    $composerJson['extra']
);

$fileSystem->dumpFile(
    $systemDir . '/composer.json',
    json_encode($composerJson, JSON_PRETTY_PRINT)
);

exec("composer install -d {$systemDir} --no-suggest --no-progress");

/** @noinspection PhpComposerExtensionStubsInspection */
$zip = new ZipArchive();
/** @noinspection PhpComposerExtensionStubsInspection */
$zip->open("{$baseDir}/cast-{$composerJson['version']}.zip", ZipArchive::CREATE | ZipArchive::OVERWRITE);

$files = new RecursiveIteratorIterator(
    new RecursiveDirectoryIterator($packageDir),
    RecursiveIteratorIterator::LEAVES_ONLY
);

foreach ($files as $file) {
    if ($file->isDir()) {
        continue;
    }

    $filePath = $file->getRealPath();
    $relativePath = substr($filePath, strlen($packageDir) + 1);

    $zip->addFile($filePath, $relativePath);
}

$zip->close();

exec("rm -rf {$packageDir}");
